{"version":3,"sources":["redux/actions/switchPageAction.js","utils/fetches.js","redux/actions/todosActions.js","components/mainPage/todoRow.js","components/mainPage/todoList.js","components/mainPage/index.js","components/editPage/index.js","App.js","redux/reducers/switchPageReducer.js","redux/reducers/todosReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["switchPage","pageInfo","type","payload","addTodo","text","body","todoText","fetch","headers","Accept","Content-Type","method","JSON","stringify","deleteTodo","_id","changeTodo","id","getTodos","dispatch","then","res","json","data","todos","catch","err","error","Todo","_this","props","todo","status","_this$props$todo","this","react_default","a","createElement","onClick","bind","name","info","Component","connect","todoList","_ref","map","i","todoRow","key","mainPaige","state","inputValue","e","preventDefault","setState","console","onChange","target","value","_this$props","isLoading","mainPage_todoList","todosReducer","EditPage","editTodo","_this$state","defaultValue","App","pageName","className","mainPage","editPage","switchPageReducer","initialState","combineReducers","arguments","length","undefined","action","Object","objectSpread","store","createStore","rootReduser","applyMiddleware","ReduxThunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8def25a2.chunk.js","sourcesContent":["export const SWITCH_PAGE = \"SWITCH_PAGE\";\r\n\r\nexport const switchPage = pageInfo => ({\r\n    type: SWITCH_PAGE,\r\n    payload: pageInfo\r\n})","const addTodo = (text) => {\r\n    const body = {\r\n        todoText: text\r\n    }\r\n    return fetch(\"http://localhost:3003/todos\",{\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:\"POST\",\r\n        body:JSON.stringify(body),\r\n    })\r\n}\r\n\r\nconst deleteTodo = _id => {\r\n    return fetch(\"http://localhost:3003/todos\",{\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:\"DELETE\",\r\n        body:JSON.stringify({_id}),\r\n    })\r\n}\r\n\r\nconst getTodos = () => {\r\n    return fetch(\"http://localhost:3003/todos\")\r\n}\r\n\r\nconst getTodo = (id) => {\r\n    return fetch(\"http://localhost:3003/todo/\"+id)\r\n}\r\n\r\nconst changeTodo = (id,text) => {\r\n    const body = {\r\n        todoText: text,\r\n        id\r\n    }\r\n    return fetch(\"http://localhost:3003/todos\",{\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method:\"PUT\",\r\n        body:JSON.stringify(body),\r\n    })\r\n}\r\n\r\nexport{ addTodo, deleteTodo, getTodos, changeTodo, getTodo }","import { getTodos as getTodosFetch } from \"../../utils/fetches\";\r\n\r\nexport const GET_TODOS_BEGIN = \"GET_TODOS_BEGIN\";\r\nexport const GET_TODOS_SUCCESS = \"GET_TODOS_SUCCESS\";\r\nexport const GET_TODOS_FAIL = \"GET_TODOS_FAIL\";\r\n\r\nexport const getTodosBegin = () => ({\r\n    type: GET_TODOS_BEGIN\r\n})\r\nexport const getTodosSuccess = todos => ({\r\n    type: GET_TODOS_SUCCESS,\r\n    payload: {todos}\r\n})\r\nexport const getTodosFail = error => ({\r\n    type:GET_TODOS_FAIL,\r\n    payload: {error}\r\n})\r\nexport const getTodos = () => dispatch => {\r\n    \r\n    dispatch(getTodosBegin());\r\n    return getTodosFetch()\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                dispatch(getTodosSuccess(data));\r\n            })\r\n            .catch(err => {\r\n                dispatch(getTodosFail(err));\r\n            })\r\n}","import React,{Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { switchPage } from \"../../redux/actions/switchPageAction\"\r\nimport { getTodos } from \"../../redux/actions/todosActions\"\r\n\r\nimport {deleteTodo} from \"../../utils/fetches\"\r\nclass Todo extends Component{\r\n    deleteTodo = () => {\r\n        deleteTodo(this.props.todo._id)        \r\n            .then(res=>{\r\n                if(res.status === 200) {\r\n                    this.props.getTodos();\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { text,_id } = this.props.todo;\r\n        const { switchPage } = this.props;\r\n        \r\n        return (            \r\n            <li>\r\n                <label>{text}</label>\r\n                    <button onClick = {switchPage.bind(null,{name:\"edit\",info:{text,_id}})}>edit</button>\r\n                <button onClick = {this.deleteTodo}>delete</button>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    switchPage: info => {\r\n        dispatch(switchPage(info));\r\n    },\r\n    getTodos: () => {\r\n        dispatch(getTodos());\r\n    }\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(Todo)","import React from 'react';\r\nimport Todo from \"./todoRow\";\r\n\r\nconst todoList = ({todos}) => {\r\n    return (\r\n        <ul>\r\n            {todos.map((todo,i) => <Todo key = {todo._id} todo = {todo} />)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default todoList;","import React, {Component} from 'react';\r\nimport TodoList from \"./todoList\"\r\nimport {addTodo} from \"../../utils/fetches\";\r\nimport {connect} from \"react-redux\";\r\nimport {getTodos} from \"../../redux/actions/todosActions\"\r\n\r\nclass mainPaige extends Component {\r\n    state = {\r\n        inputValue: \"\"\r\n    }\r\n\r\n    addTodo = (e) => {\r\n        e.preventDefault();\r\n        addTodo(this.state.inputValue)             \r\n            .then((res)=>{\r\n                if(res.status === 200) {\r\n                    this.setState({\r\n                        inputValue: \"\"\r\n                    })      \r\n                    this.props.getTodos()             \r\n                } else {\r\n                    console.error(\"change text\")\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            inputValue: e.target.value\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.props.getTodos()\r\n    }\r\n    render() {\r\n        const {isLoading, error} = this.props;\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <input onChange = {this.onChange} value ={this.state.inputValue} type = \"text\" />\r\n                    <input onClick = {this.addTodo} type = \"submit\" />\r\n                </form>\r\n                {error ? <div>error</div> : <TodoList todos = {this.props.todos} />}\r\n                {isLoading ? <div>Loading ...</div> : null }\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    todos: state.todosReducer.todos,\r\n    isLoading: state.todosReducer.isLoading,\r\n    error: state.todosReducer.error\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getTodos: () => {\r\n        dispatch(getTodos())\r\n    }\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(mainPaige)","import React, {Component} from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { changeTodo } from '../../utils/fetches';\r\nimport { switchPage } from \"../../redux/actions/switchPageAction\";\r\n\r\nclass EditPage extends Component {\r\n    state = {\r\n        inputValue: \"\",\r\n        isLoading: false,\r\n        error: null\r\n    }\r\n\r\n    editTodo = (e) => {\r\n        e.preventDefault();\r\n        const {_id} = this.props.info\r\n        const {inputValue} = this.state\r\n        this.setState({\r\n            isLoading:true\r\n        })\r\n        changeTodo(_id,inputValue)        \r\n            .then((res)=>{\r\n                if(res.status === 200) {\r\n                    this.props.switchPage({name:\"main\",info:null})\r\n                } else {\r\n                    this.setState({\r\n                        error: \"error\",\r\n                        isLoading:false\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            inputValue: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { text } = this.props.info;\r\n        const { isLoading, error } = this.state;\r\n        return (\r\n            <div>\r\n                <form>\r\n                    <input onChange = {this.onChange} defaultValue = {text} type = \"text\" />\r\n                    <input onClick = {this.editTodo} type = \"submit\" />\r\n                </form>\r\n                {error ? <div>change text</div>:null}\r\n                {isLoading ? <div>Loading ...</div>:null}\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    switchPage: (info) => {\r\n        dispatch(switchPage(info));\r\n    }\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(EditPage);","import React, {Component} from 'react';\nimport './App.css';\nimport MainPage from \"./components/mainPage\";\nimport EditPage from \"./components/editPage\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  render() {\n    const { pageName, pageInfo } = this.props\n    return (\n          <div className=\"App\">\n            {pageName === \"main\" ? \n              <MainPage />:\n              <EditPage info = {pageInfo} />\n            }\n          </div>\n    );\n  }  \n}\n\nconst mapStateToProps = state => ({\n  pageName: state.switchPageReducer.name,\n  pageInfo: state.switchPageReducer.info\n})\n\nexport default connect(mapStateToProps)(App);\n","import { SWITCH_PAGE } from \"../actions/switchPageAction\"\r\n\r\nconst initialState = {\r\n    name: \"main\",\r\n    info: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SWITCH_PAGE:\r\n            return {\r\n                name: action.payload.name,\r\n                info: action.payload.info\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import {GET_TODOS_BEGIN,\r\n        GET_TODOS_SUCCESS,\r\n        GET_TODOS_FAIL\r\n    } from \"../actions/todosActions\"\r\n\r\nconst initialState = {\r\n    todos: [],\r\n    isLoading: false,\r\n    error: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_TODOS_BEGIN:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                error: null\r\n            };\r\n        case GET_TODOS_SUCCESS: \r\n            return {\r\n                isLoading: false,\r\n                todos: action.payload.todos.todos,\r\n                error: null\r\n            };\r\n        case GET_TODOS_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.payload.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport switchPageReducer from \"./switchPageReducer\"\r\nimport todosReducer from \"./todosReducer\";\r\nexport default combineReducers({\r\n    switchPageReducer,\r\n    todosReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport ReduxThunk from 'redux-thunk';\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReduser from \"./redux/reducers/rootReducer\";\n\nconst store = createStore(rootReduser,applyMiddleware(ReduxThunk))\n\nReactDOM.render(\n    <Provider store = { store }>\n        <App />\n    </Provider>\n, document.getElementById('root'));"],"sourceRoot":""}